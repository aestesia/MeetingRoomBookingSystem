@page
@model WebApp.Pages.Book.CreateModel
@using WebApp.ViewModel
@{
    ViewData["Title"] = "Book a Room";
}

<h2>Create Booking</h2>
<form method="post" class="needs-validation" novalidate>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @if (ViewData["ConflictSuggestions"] is List<(DateTime Start, DateTime End)> suggestions && suggestions.Any())
    {
        <div class="alert alert-info mb-4">
            <ul class="mb-0">
                @foreach (var slot in suggestions)
                {
                    <li>@slot.Start.ToString("HH:mm") - @slot.End.ToString("HH:mm")</li>
                }
            </ul>
        </div>
    }
    <div class="mb-3">
        <label asp-for="BookingViewModel.EmployeeId" class="form-label"></label>
        <input asp-for="BookingViewModel.EmployeeId" class="form-control" />
        <span asp-validation-for="BookingViewModel.EmployeeId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="BookingViewModel.Email" class="form-label"></label>
        <input asp-for="BookingViewModel.Email" class="form-control" />
        <span asp-validation-for="BookingViewModel.Email" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="BookingViewModel.RoomId" class="form-label"></label>
        <select asp-for="BookingViewModel.RoomId" class="form-select" asp-items="Model.RoomList">
            <option value="">Select a room</option>
        </select>
        <span asp-validation-for="BookingViewModel.RoomId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="BookingViewModel.Title" class="form-label"></label>
        <input asp-for="BookingViewModel.Title" class="form-control" />
        <span asp-validation-for="BookingViewModel.Title" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="BookingViewModel.NumOfAttendees" class="form-label"></label>
        <input asp-for="BookingViewModel.NumOfAttendees" class="form-control" />
        <span asp-validation-for="BookingViewModel.NumOfAttendees" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="BookingViewModel.StartDate" class="form-label"></label>
        <input asp-for="BookingViewModel.StartDate" class="form-control" />
        <span asp-validation-for="BookingViewModel.StartDate" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="BookingViewModel.EndDate" class="form-label"></label>
        <input asp-for="BookingViewModel.EndDate" class="form-control" />
        <span asp-validation-for="BookingViewModel.EndDate" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="BookingViewModel.IsRecurring" class="form-check-label"></label>
        <input asp-for="BookingViewModel.IsRecurring" type="checkbox" class="form-check-input" id="isRecurringCheckbox" />
        <span asp-validation-for="BookingViewModel.IsRecurring" class="text-danger"></span>
    </div>
    <div id="recurrenceFields" style="display:none;">
        <div class="mb-3">
            <label asp-for="BookingViewModel.RecurrencePattern" class="form-label"></label>
            <select asp-for="BookingViewModel.RecurrencePattern" class="form-select" asp-items="Html.GetEnumSelectList<RecurrencePattern>()"></select>
            <span asp-validation-for="BookingViewModel.RecurrencePattern" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="BookingViewModel.RecurrenceEndDate" class="form-label"></label>
            <input asp-for="BookingViewModel.RecurrenceEndDate" type="date" class="form-control" />
            <span asp-validation-for="BookingViewModel.RecurrenceEndDate" class="text-danger"></span>
        </div>
    </div>
    
    <button type="submit" class="btn btn-success">Create</button>
</form>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkbox = document.getElementById("isRecurringCheckbox");
            const recurrenceFields = document.getElementById("recurrenceFields");

            function toggleRecurrenceFields() {
                recurrenceFields.style.display = checkbox.checked ? "block" : "none";
            }

            checkbox.addEventListener("change", toggleRecurrenceFields);
            toggleRecurrenceFields();
        });
    </script>
}